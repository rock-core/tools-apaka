#!/bin/sh
set -e

echo "Reading pbuilder /etc/pbuilderrc"

UBUNTU_DISTS="trusty vivid wily xenial yakkety zesty artful bionic cosmic disco eoan focal"
DEBIAN_DISTS="sid wheezy jessie stretch buster bullseye"

if [ "x${DIST}" = "x" ] && [ "x${DISTRIBUTION}" != "x" ]; then
    echo "warning: DIST is not set, using DISTRIBUTION=${DISTRIBUTION}"
    DIST=$DISTRIBUTION
elif [ "x${DIST}" != "x" ] && [ "x${DISTRIBUTION}" = "x" ]; then
    echo "warning: DISTRIBUTION is not set, using DIST=${DIST}"
    DISTRIBUTION=$DIST
elif [ "x${DIST}" != "x" ] && [ "x${DISTRIBUTION}" != "x" ]; then
    echo "warning: DIST (${DIST}) and DISTRIBUTION (${DISTRIBUTION}) are both set. The value of DIST will be used."
    DISTRIBUTION=$DIST
else
    # no default distribution, let it fail
    echo "ERROR: no DISTRIBUTION or DIST set"
    exit 1
fi

for NAME in $UBUNTU_DISTS; do
    if [ "$DIST" == "$NAME" ]; then
        DIST_TYPE=ubuntu
    fi
done

for NAME in $DEBIAN_DISTS; do
    if [ "$DIST" == "$NAME" ]; then
        DIST_TYPE=debian
    fi
done

if [ "$ARCH" == "armel" ] || [ "$ARCH" == "armhf" ] || [ "$ARCH" == "arm64" ]; then
    DEBOOTSTRAP="qemu-debootstrap"
fi

if [ "$DIST_TYPE" == "ubuntu" ]; then
    echo "Identified Ubuntu Distribution"

    COMPONENTS="main restricted universe multiverse"
    # The default mirror site only provides i386 and amd64
    MIRRORSITE=http://de.archive.ubuntu.com/ubuntu/

    if [ "$ARCH" == "armel" ] || [ "$ARCH" == "armhf" ] || [ "$ARCH" == "arm64" ]; then
        # The port mirror site provides arm64, armel, armhf
        MIRRORSITE=http://ports.ubuntu.com/ubuntu-ports
    fi

    OTHERMIRROR="deb $MIRRORSITE $DIST-updates $COMPONENTS"
    DEBOOTSTRAPOPTS=("${DEBOOTSTRAPOPTS[@]}" --components=main,restricted,universe,multiverse)
    EXTRA_PACKAGES+="ruby-all-dev,"

elif [ "$DIST_TYPE" == "debian" ]; then
    echo "Identified Debian Distribution"
    echo " -- you have to make sure that 'debian-archive-keyring' is installed"

    if [ "$DIST" != "wheezy" ]; then
	# Not available on wheezy
    	EXTRA_PACKAGES+="ruby-all-dev,"
    fi

    if [ "$DIST" == "bullseye" ]; then
    # gem2deb requires debhelper-compat
    # that comes with debhelper package
    	EXTRA_PACKAGES+="debhelper,"
    fi

    MIRRORSITE=http://ftp.no.debian.org/debian/
    OTHERMIRROR="deb $MIRRORSITE $DIST-updates $COMPONENTS"
    if [ "$DIST" != "sid" ]; then
        # as long as sid is testing
        OTHERMIRROR="$OTHERMIRROR | deb $MIRRORSITE $DIST-backports $COMPONENTS"
    fi

    # Update keyring
    for((i=0; i < ${#DEBOOTSTRAPOPTS[@]}; i++))
    do
        DEBOOTSTRAPOPTS[$i]=`echo ${DEBOOTSTRAPOPTS[$i]} | sed 's#keyring=[^ ]\+#keyring=/usr/share/keyrings/debian-archive-keyring.gpg#g'`
    done

    COMPONENTS="main contrib non-free"
    DEBOOTSTRAPOPTS=("${DEBOOTSTRAPOPTS[@]}" --components=main,contrib,nonfree)
fi
# Append additional packages here
# cmake required by quite some package, including qtbindings
# apt-utils, e.g., for running apt-ftparchive in the hook dir see https://wiki.debian.org/PbuilderTricks

# perl-openssl-defaults is needed due to the bug in the debootstrap: https://bugs.launchpad.net/ubuntu/+source/debootstrap/+bug/86536?comments=all
# the issue arrised by building qtbindings

EXTRA_PACKAGES+="apt,cmake,dh-autoreconf,libgl1-mesa-dev,libboost-dev,yard,gem2deb,perl-openssl-defaults"
DEBOOTSTRAPOPTS+=("--include=$EXTRA_PACKAGES")

echo "DISTRIBUTION: ${DISTRIBUTION} (DIST: ${DIST})"
echo "ARCH: ${ARCH}"
echo "COMPONENTS: ${COMPONENTS}"
echo "DIST_TYPE: ${DIST_TYPE}"
echo "DEBOOTSTRAPOPTS: ${DEBOOTSTRAPOPTS[@]}"
echo "MIRRORSITE: ${MIRRORSITE}"
echo "OTHERMIRROR: ${OTHERMIRROR}"

# Enable network in pbuilder, otherwise embedded bootstrap scripts will fail
USENETWORK=yes

###   ORIGINAL VERSION   #####

# this is your configuration file for pbuilder.
# the file in /usr/share/pbuilder/pbuilderrc is the default template.
# /etc/pbuilderrc is the one meant for overwriting defaults in
# the default template
#
# read pbuilderrc.5 document for notes on specific options.
#MIRRORSITE=http://de.archive.ubuntu.com/ubuntu/